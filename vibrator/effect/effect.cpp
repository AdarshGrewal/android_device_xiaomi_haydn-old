/*
 * Copyright (c) 2020, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *     * Neither the name of The Linux Foundation nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "effect.h"

#define ARRAY_SIZE(a) (sizeof(a) / sizeof(*(a)))

static const int8_t effect_0[] = {
    2,    1,    2,    0,    1,    2,    2,    2,    3,    3,    3,    4,    5,    5,    5,    7,
    7,    7,    9,   11,   12,   15,   16,   19,   21,   24,   27,   31,   35,   41,   46,   52,
   60,   67,   75,   81,   85,   91,   95,   99,  101,  105,  106,  108,  110,  110,  112,  113,
  113,  114,  114,  114,  112,  113,  113,  111,  111,  110,  110,  109,  108,  107,  106,  105,
  103,  102,  102,   99,   98,   97,   96,   94,   92,   91,   89,   87,   86,   83,   81,   79,
   77,   74,   71,   67,   64,   61,   56,   52,   46,   40,   33,   25,   17,    6,   -4,  -16,
  -31,  -45,  -56,  -66,  -74,  -82,  -88,  -95,  -98, -103, -106, -108, -109, -111, -112, -112,
 -111, -112, -111, -111, -109, -108, -107, -105, -102, -101,  -99,  -97,  -93,  -91,  -89,  -87,
  -83,  -81,  -78,  -76,  -73,  -70,  -68,  -65,  -62,  -59,  -57,  -54,  -51,  -48,  -46,  -42,
  -40,  -37,  -34,  -31,  -26,  -24,  -21,  -17,  -13,   -9,   -5,    1,    6,   12,   18,   25,
   32,   40,   44,   49,   53,   56,   58,   60,   61,   62,   63,   63,   62,   62,   60,   60,
   57,   55,   54,   52,   49,   47,   44,   41,   38,   35,   32,   29,   26,   23,   20,   16,
   13,    9,    7,    4,    0,   -3,   -6,   -9,  -11,  -15,  -16,  -18,  -22,  -24,  -25,  -27,
  -28,  -29,  -31,  -31,  -32,  -31,  -31,  -30,  -27,  -27,  -25,  -22,  -17,  -13,   -7,   -1,
    4,   10,   14,   19,   23,   27,   30,   34,   37,   39,   42,   45,   48,   51,   53,   56,
   58,   61,   63,   65,   67,   68,   72,   75,   77,   79,   82,   85,   87,   89,   92,   94,
   96,   99,  100,  103,  105,  106,  109,  110,  111,  113,  114,  114,  116,  116,  117,  116,
  116,  115,  114,  112,  110,  109,  104,  101,   96,   91,   83,   76,   67,   58,   45,   33,
   22,   13,    5,   -3,  -10,  -14,  -20,  -25,  -29,  -33,  -36,  -39,  -42,  -45,  -47,  -48,
  -52,  -51,  -54,  -56,  -57,  -58,  -60,  -61,  -62,  -64,  -64,  -64,  -65,  -66,  -66,  -68,
  -68,  -69,  -69,  -70,  -70,  -71,  -72,  -72,  -73,  -73,  -73,  -73,  -74,  -72,  -73,  -73,
  -73,  -71,  -71,  -69,  -68,  -67,  -66,  -64,  -62,  -59,  -56,  -52,  -48,  -43,  -38,  -33,
  -29,  -25,  -23,  -20,  -17,  -15,  -13,  -12,  -11,   -9,   -8,   -7,   -5,   -5,   -6,   -4,
   -4,   -3,   -3,   -2,   -3,   -3,   -1,   -2,   -2,   -2,   -2,   -2,   -2,
};

static const int8_t effect_1[] = {
    0,    0,    0,    0,    0,    2,    1,    1,    2,    3,    3,    4,    4,    5,    5,    6,
    7,    8,    9,   11,   12,   15,   16,   19,   21,   24,   27,   32,   35,   40,   46,   53,
   60,   65,   70,   75,   80,   83,   87,   90,   93,   95,   97,   98,  100,  101,  102,  104,
  105,  106,  107,  106,  107,  109,  108,  109,  109,  110,  109,  110,  110,  111,  111,  110,
  111,  112,  111,  112,  112,  111,  111,  111,  110,  109,  110,  110,  110,  110,  108,  107,
  107,  105,  105,  103,  101,  101,   98,   96,   92,   90,   88,   84,   79,   75,   68,   64,
   56,   48,   38,   28,   16,    3,  -11,  -23,  -33,  -42,  -49,  -57,  -63,  -68,  -73,  -77,
  -81,  -84,  -86,  -90,  -92,  -94,  -96,  -97,  -98, -100, -101, -103, -104, -105, -106, -105,
 -106, -107, -109, -109, -109, -110, -110, -109, -110, -111, -110, -110, -111, -112, -112, -112,
 -112, -112, -112, -112, -112, -110, -111, -111, -109, -110, -109, -108, -106, -105, -103, -102,
 -100,  -98,  -96,  -92,  -90,  -85,  -80,  -76,  -70,  -64,  -56,  -49,  -42,  -36,  -29,  -24,
  -21,  -16,  -14,  -10,   -7,   -6,   -3,   -1,    0,    3,    4,    5,    6,    7,    8,    8,
   10,   10,   12,   11,   13,   12,   14,   14,   15,   14,   16,   17,   17,   18,   18,   19,
   19,   19,   20,   21,   22,   22,   22,   23,   24,   23,   24,   25,   27,   27,   27,   29,
   30,   31,   32,   33,   34,   36,   38,   40,   42,   44,   47,   51,   54,   58,   63,   67,
   73,   78,   82,   87,   90,   93,   96,   99,  101,  102,  105,  104,  107,  107,  108,  108,
  110,  109,  111,  111,  110,  111,  111,  110,  111,  111,  111,  111,  112,  110,  110,  111,
  110,  110,  110,  109,  108,  109,  108,  107,  107,  107,  107,  106,  105,  104,  103,  102,
  101,  101,  100,   98,   96,   95,   94,   91,   89,   86,   83,   80,   77,   73,   67,   64,
   57,   50,   42,   34,   23,   12,    1,   -9,  -18,  -26,  -33,  -39,  -44,  -49,  -52,  -56,
  -60,  -62,  -64,  -66,  -67,  -69,  -70,  -72,  -72,  -73,  -74,  -75,  -75,  -75,  -77,  -77,
  -78,  -77,  -77,  -78,  -78,  -79,  -78,  -78,  -78,  -78,  -79,  -79,  -78,  -79,  -78,  -77,
  -78,  -78,  -78,  -76,  -77,  -76,  -76,  -75,  -75,  -73,  -74,  -74,  -73,  -72,  -70,  -69,
  -67,  -67,  -65,  -64,  -62,  -59,  -57,  -54,  -50,  -47,  -42,  -37,  -33,  -30,  -26,  -24,
  -21,  -18,  -15,  -15,  -13,  -11,   -9,   -8,   -9,   -6,   -5,   -5,   -5,   -4,   -3,   -4,
   -2,   -3,   -2,   -2,   -2,   -1,   -1,   -1,   -1,   -1,   -1,    0,    1,    0,    0,    0,
    0,    0,    0,    0,    1,    0,    1,    2,    1,    1,    1,    1,    0,    0,    0,    1,
    1,    0,    1,    1,    0,    1,    0,    1,    1,    1,    1,
};

static const int8_t effect_2[] = {
    1,    1,    1,    1,    0,    1,    1,    2,    1,    3,    2,    4,    4,    5,    5,    5,
    7,    7,    9,   10,   13,   13,   15,   17,   19,   23,   25,   29,   34,   38,   42,   49,
   56,   63,   69,   75,   80,   86,   89,   91,   93,   97,   98,   99,  100,  100,   99,  101,
  100,   99,   99,   97,   96,   97,   94,   92,   91,   89,   87,   86,   84,   81,   80,   78,
   76,   73,   71,   67,   66,   64,   61,   58,   55,   54,   49,   47,   43,   40,   36,   32,
   26,   21,   17,   12,    6,   -1,   -9,  -18,  -27,  -37,  -49,  -61,  -71,  -81,  -89,  -96,
 -100, -104, -108, -110, -112, -113, -113, -112, -112, -111, -108, -106, -104, -100,  -97,  -94,
  -90,  -85,  -83,  -77,  -74,  -68,  -64,  -60,  -56,  -51,  -47,  -42,  -37,  -32,  -28,  -24,
  -19,  -16,  -11,   -8,   -4,    0,    4,    6,    9,   12,   13,   15,   18,   19,   21,   22,
   22,   21,   21,   20,   18,   17,   15,   15,   12,   11,    8,    6,    4,    2,   -1,   -4,
   -7,  -10,  -13,  -16,  -20,  -23,  -26,  -30,  -35,  -39,  -43,  -47,  -51,  -55,  -59,  -63,
  -67,  -71,  -75,  -78,  -84,  -87,  -90,  -94,  -97, -100, -103, -107, -108, -111, -113, -114,
 -115, -116, -115, -115, -116, -112, -112, -109, -105,  -98,  -92,  -87,  -78,  -68,  -57,  -47,
  -37,  -30,  -22,  -17,   -9,   -4,    1,    5,    8,   12,   16,   18,   22,   24,   26,   28,
   30,   32,   35,   37,   38,   41,   43,   44,   46,   47,   49,   49,   51,   52,   53,   55,
   56,   57,   58,   60,   59,   61,   62,   62,   62,   62,   62,   62,   61,   61,   61,   59,
   58,   56,   54,   52,   49,   47,   42,   38,   33,   30,   26,   22,   20,   17,   15,   14,
   11,   10,   10,    8,    7,    6,    5,    5,    3,    4,    3,    3,    3,    2,    2,    2,
    2,    1,    0,    1,    2,    1,    1,    0,    1,    1,    1,    0,    1,    0,    1,    1,
};

static const int8_t effect_3[] = {
    2,    1,    2,    0,    1,    2,    2,    2,    3,    3,    3,    4,    5,    5,    5,    7,
    7,    7,    9,   11,   12,   15,   16,   18,   21,   24,   27,   31,   36,   41,   47,   53,
   60,   66,   72,   77,   80,   83,   86,   87,   87,   89,   87,   88,   88,   85,   84,   83,
   80,   79,   76,   73,   69,   66,   64,   59,   57,   52,   49,   45,   40,   36,   32,   28,
   23,   19,   15,    8,    4,   -1,   -6,  -11,  -17,  -23,  -29,  -37,  -43,  -52,  -60,  -70,
  -80,  -92, -101, -108, -114, -118, -121, -121, -122, -122, -120, -118, -114, -112, -106, -101,
  -96,  -90,  -82,  -76,  -67,  -62,  -53,  -46,  -37,  -29,  -20,  -13,   -4,    4,   11,   19,
   28,   34,   41,   47,   53,   59,   64,   68,   72,   76,   78,   80,   83,   84,   84,   83,
   83,   80,   78,   74,   72,   70,   65,   63,   59,   55,   49,   45,   39,   33,   28,   22,
   14,    8,    2,   -5,  -12,  -19,  -26,  -34,  -41,  -48,  -55,  -61,  -67,  -74,  -80,  -86,
  -92,  -97, -102, -107, -110, -113, -117, -119, -119, -119, -118, -117, -114, -110, -104,  -98,
  -91,  -81,  -70,  -62,  -54,  -46,  -40,  -34,  -29,  -24,  -19,  -15,  -11,   -6,   -2,    1,
    3,    7,   10,   14,   16,   19,   22,   25,   27,   29,   33,   35,   37,   38,   41,   43,
   44,   46,   47,   49,   50,   51,   51,   52,   53,   51,   51,   50,   50,   47,   45,   42,
   39,   35,   31,   27,   23,   20,   17,   16,   14,   10,   10,    9,    8,    7,    5,    4,
    4,    4,    3,    2,    2,    1,    1,    1,    1,    1,    1,    1,
};

static const int8_t effect_4[] = {
    0,    1,    0,    1,    1,    1,    2,    1,    3,    3,    3,    5,    5,    5,    5,    6,
    9,    9,   10,   12,   13,   15,   17,   19,   21,   23,   25,   26,   28,   29,   29,   31,
   32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   41,   42,   43,   44,   45,   46,
   48,   48,   49,   50,   51,   52,   53,   54,   55,   56,   59,   59,   60,   60,   63,   63,
   64,   65,   66,   68,   69,   70,   71,   72,   74,   76,   75,   78,   79,   81,   81,   83,
   84,   86,   86,   88,   89,   90,   92,   93,   94,   95,   97,   98,   98,   99,  100,  102,
  103,  104,  105,  105,  106,  108,  108,  110,  110,  110,  111,  111,  113,  112,  114,  114,
  115,  115,  114,  115,  114,  115,  115,  114,  114,  114,  113,  112,  111,  110,  109,  108,
  106,  103,   99,   98,   95,   92,   91,   89,   87,   86,   84,   82,   81,   80,   78,   76,
   76,   73,   71,   70,   68,   68,   65,   64,   62,   61,   59,   56,   54,   53,   51,   47,
   46,   43,   42,   39,   38,   34,   33,   29,   27,   24,   23,   20,   18,   16,   12,    9,
    7,    4,    1,   -1,   -4,   -8,  -10,  -12,  -15,  -18,  -20,  -22,  -25,  -28,  -31,  -33,
  -35,  -38,  -41,  -44,  -46,  -49,  -51,  -53,  -56,  -58,  -61,  -62,  -64,  -66,  -68,  -70,
  -71,  -73,  -76,  -78,  -80,  -81,  -83,  -84,  -85,  -87,  -88,  -90,  -90,  -93,  -93,  -95,
  -95,  -96,  -98,  -97,  -98,  -99,  -99,  -99,  -99, -100,  -98,  -98,  -98,  -98,  -96,  -97,
  -96,  -94,  -93,  -93,  -92,  -91,  -90,  -90,  -88,  -88,  -86,  -85,  -84,  -81,  -81,  -78,
  -77,  -76,  -75,  -73,  -70,  -69,  -67,  -66,  -64,  -62,  -60,  -58,  -55,  -53,  -51,  -49,
  -46,  -43,  -41,  -39,  -36,  -34,  -30,  -28,  -25,  -22,  -20,  -17,  -14,  -12,   -9,   -5,
   -3,   -1,    3,    5,    8,   10,   13,   16,   19,   23,   25,   27,   31,   34,   36,   38,
   40,   43,   46,   49,   51,   52,   56,   58,   60,   63,   64,   66,   68,   69,   72,   73,
   75,   77,   79,   81,   82,   84,   85,   85,   88,   88,   90,   91,   91,   92,   93,   94,
   95,   95,   95,   96,   96,   96,   96,   95,   95,   95,   94,   94,   94,   92,   92,   91,
   90,   90,   89,   88,   87,   86,   83,   83,   81,   81,   78,   78,   76,   73,   73,   70,
   68,   68,   66,   64,   61,   60,   58,   56,   53,   51,   49,   46,   44,   41,   39,   36,
   33,   31,   28,   25,   23,   19,   17,   14,   11,    9,    6,    3,    0,   -2,   -4,   -8,
  -11,  -14,  -17,  -20,  -21,  -25,  -27,  -30,  -33,  -35,  -38,  -41,  -43,  -46,  -48,  -51,
  -54,  -56,  -58,  -61,  -63,  -64,  -66,  -68,  -71,  -72,  -73,  -76,  -77,  -80,  -82,  -82,
  -84,  -86,  -87,  -89,  -90,  -93,  -93,  -95,  -96,  -96,  -97, -100, -100, -101, -102, -103,
 -103, -104, -105, -106, -107, -108, -109, -110, -110, -111, -111, -111, -111, -112, -110, -111,
 -109, -109, -109, -108, -107, -106, -105, -104, -103, -103, -101, -100,  -99,  -98,  -96,  -94,
  -93,  -92,  -91,  -89,  -88,  -86,  -84,  -82,  -80,  -78,  -76,  -75,  -74,  -71,  -70,  -68,
  -65,  -64,  -63,  -60,  -59,  -56,  -54,  -53,  -52,  -49,  -47,  -45,  -43,  -42,  -39,  -38,
  -35,  -33,  -32,  -30,  -28,  -26,  -24,  -23,  -21,  -20,  -18,  -16,  -14,  -12,  -10,   -9,
   -7,   -6,   -4,   -3,   -1,   -1,    1,    3,    5,    5,    7,    9,    9,   10,   11,   12,
   13,   15,   16,   18,   18,   19,   21,   21,   22,   24,   26,   27,   27,   30,   32,   34,
   36,   38,   40,   41,   43,   43,   44,   45,   45,   47,   46,   47,   48,   48,   47,   47,
   48,   47,   47,   47,   47,   47,   47,   46,   47,   46,   46,   45,   45,   44,   45,   43,
   44,   43,   43,   42,   43,   41,   41,   40,   39,   39,   38,   38,   38,   36,   37,   35,
   36,   35,   34,   33,   33,   33,   32,   30,   31,   30,   30,   29,   29,   28,   27,   28,
   27,   26,   25,   24,   25,   24,   24,   23,   24,   23,   22,   21,   21,   20,   20,   19,
   19,   18,   18,   18,   17,   17,   16,   17,   16,   15,   15,   14,   15,   15,   14,   13,
   12,   12,   12,   11,   10,   11,    9,   10,    8,    8,    7,    5,    6,    4,    4,    4,
    2,    3,    2,    2,    2,    1,    1,    1,    1,
};

static const int8_t effect_5[] = {
    1,    1,    1,    1,    1,    1,    2,    2,    2,    3,    3,    4,    4,    5,    6,    7,
    8,    9,   10,   12,   13,   14,   17,   19,   22,   25,   29,   33,   38,   42,   48,   53,
   58,   61,   63,   64,   64,   64,   64,   63,   61,   58,   56,   52,   49,   45,   41,   37,
   33,   28,   23,   18,   13,    8,    3,   -3,   -8,  -13,  -18,  -23,  -28,  -34,  -38,  -44,
  -49,  -55,  -61,  -67,  -73,  -80,  -85,  -88,  -90,  -90,  -90,  -88,  -85,  -81,  -76,  -70,
  -64,  -58,  -50,  -42,  -34,  -25,  -15,   -7,    3,   13,   22,   31,   40,   49,   58,   66,
   74,   81,   89,   94,  100,  106,  110,  114,  117,  119,  121,  122,  122,  122,  120,  117,
  115,  111,  106,  100,   93,   87,   79,   70,   62,   53,   43,   34,   24,   14,    4,   -6,
  -15,  -25,  -35,  -44,  -53,  -61,  -68,  -76,  -83,  -88,  -92,  -97, -100, -102, -103, -103,
 -101,  -98,  -94,  -90,  -87,  -83,  -78,  -73,  -68,  -63,  -58,  -51,  -45,  -38,  -32,  -25,
  -18,  -12,   -4,    3,   11,   17,   24,   32,   38,   44,   50,   56,   61,   65,   69,   72,
   75,   76,   77,   77,   76,   74,   70,   65,   60,   54,   48,   43,   38,   35,   30,   26,
   23,   19,   16,   13,   10,    7,    4,    1,   -2,   -5,   -7,  -10,  -13,  -14,  -16,  -19,
  -21,  -22,  -24,  -26,  -27,  -28,  -29,  -29,  -29,  -29,  -28,  -28,  -26,  -24,  -22,  -19,
  -17,  -15,  -13,  -12,  -11,   -9,   -8,   -7,   -6,   -6,   -5,   -4,   -4,   -3,   -3,   -3,
   -2,   -2,   -2,
};

static const struct effect_stream effects[] = {
    {
        .effect_id = 0,
        .data = effect_0,
        .length = ARRAY_SIZE(effect_0),
        .play_rate_hz = 24000,
    },

    {
        .effect_id = 1,
        .data = effect_1,
        .length = ARRAY_SIZE(effect_1),
        .play_rate_hz = 24000,
    },
    {
        .effect_id = 2,
        .data = effect_2,
        .length = ARRAY_SIZE(effect_2),
        .play_rate_hz = 24000,
    },
    {
        .effect_id = 3,
        .data = effect_3,
        .length = ARRAY_SIZE(effect_3),
        .play_rate_hz = 24000,
    },
    {
        .effect_id = 4,
        .data = effect_4,
        .length = ARRAY_SIZE(effect_4),
        .play_rate_hz = 24000,
    },
    {
        .effect_id = 5,
        .data = effect_5,
        .length = ARRAY_SIZE(effect_5),
        .play_rate_hz = 24000,
    },
};

const struct effect_stream *get_effect_stream(uint32_t effect_id)
{
    int i;

    for (i = 0; i < ARRAY_SIZE(effects); i++) {
        if (effect_id == effects[i].effect_id)
            return &effects[i];
    }

    return NULL;
}
